diff -up util-linux-ng-2.17.2/sys-utils/fallocate.1.kzak util-linux-ng-2.17.2/sys-utils/fallocate.1
--- util-linux-ng-2.17.2/sys-utils/fallocate.1.kzak	2010-03-18 23:11:23.000000000 +0100
+++ util-linux-ng-2.17.2/sys-utils/fallocate.1	2013-07-30 09:49:09.252107522 +0200
@@ -5,6 +5,7 @@ fallocate \- preallocate space to a file
 .SH SYNOPSIS
 .B fallocate
 .RB [ \-n ]
+.RB [ \-p ]
 .RB [ \-o
 .IR offset ]
 .B \-l
@@ -30,6 +31,8 @@ Print help and exit.
 .IP "\fB\-n, \-\-keep-size\fP"
 Do not modify the apparent length of the file. This may effectively allocate
 blocks past EOF, which can be removed with a truncate.
+.IP "\fB\-p, \-\-punch-hole\fP"
+Punch holes in the file, the range should not exceed the length of the file.
 .IP "\fB\-o, \-\-offset\fP \fIoffset\fP
 Specifies the beginning offset of the allocation, in bytes.  Suffixes of k, m,
 g, t, p, e may be specified to denote KiB, MiB, GiB, etc.
diff -up util-linux-ng-2.17.2/sys-utils/fallocate.c.kzak util-linux-ng-2.17.2/sys-utils/fallocate.c
--- util-linux-ng-2.17.2/sys-utils/fallocate.c.kzak	2010-03-18 23:11:23.000000000 +0100
+++ util-linux-ng-2.17.2/sys-utils/fallocate.c	2013-07-30 09:50:49.937006766 +0200
@@ -39,6 +39,14 @@
 
 #include <linux/falloc.h>	/* for FALLOC_FL_* flags */
 
+#ifndef FALLOC_FL_KEEP_SIZE
+# define FALLOC_FL_KEEP_SIZE 1
+#endif
+
+#ifndef FALLOC_FL_PUNCH_HOLE
+# define FALLOC_FL_PUNCH_HOLE 2
+#endif
+
 #include "nls.h"
 
 
@@ -50,6 +58,7 @@ static void __attribute__((__noreturn__)
 	fprintf(out, _(
 		" -h, --help          this help\n"
 		" -n, --keep-size     don't modify the length of the file\n"
+		" -p, --punch-hole    punch holes in the file\n"
 		" -o, --offset <num>  offset of the allocation, in bytes\n"
 		" -l, --length <num>  length of the allocation, in bytes\n"));
 
@@ -114,6 +123,7 @@ int main(int argc, char **argv)
 	struct option longopts[] = {
 	    { "help",      0, 0, 'h' },
 	    { "keep-size", 0, 0, 'n' },
+	    { "punch-hole", 0, 0, 'p' },
 	    { "offset",    1, 0, 'o' },
 	    { "lenght",    1, 0, 'l' },
 	    { NULL,        0, 0, 0 }
@@ -123,11 +133,14 @@ int main(int argc, char **argv)
 	bindtextdomain(PACKAGE, LOCALEDIR);
 	textdomain(PACKAGE);
 
-	while ((c = getopt_long(argc, argv, "hnl:o:", longopts, NULL)) != -1) {
+	while ((c = getopt_long(argc, argv, "hnpl:o:", longopts, NULL)) != -1) {
 		switch(c) {
 		case 'h':
 			usage(stdout);
 			break;
+		case 'p':
+			mode |= FALLOC_FL_PUNCH_HOLE;
+			/* fall through */
 		case 'n':
 			mode |= FALLOC_FL_KEEP_SIZE;
 			break;
